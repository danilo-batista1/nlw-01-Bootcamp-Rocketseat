{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\Projeto\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport axios from 'axios';\nimport api from '../../services/api';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [FormData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  function handleSelectCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...FormData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = FormData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n    const data = {\n      name,\n      email,\n      whatsapp,\n      uf,\n      city,\n      latitude,\n      longitude,\n      items\n    };\n    console.log(data);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }), \"Voltar para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 10\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 26\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 18\n    }\n  }, \"Dados\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 14\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 14\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 14\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 14\n    }\n  }))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 18\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 18\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 15,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: handleSelectUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: handleSelectCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, \"Selecione uma cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 18\n    }\n  }, \"\\xCDtens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 18\n    }\n  }, \"Selecione um ou mais \\xEDtens abaixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 14\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectItem(item.id),\n    className: selectedItems.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 10\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["C:/Users/user/Documents/Projeto/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","FiArrowLeft","Map","TileLayer","Marker","axios","api","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","selectedItems","setSelectedItems","initialPosition","setInitialPosition","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedPosition","setSelectedPosition","FormData","setFormData","name","email","whatsapp","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectUf","event","target","value","handleSelectCity","handleMapClick","latlng","lat","lng","handleInputChange","handleSelectItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","preventDefault","console","log","logo","includes","image_url","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAAkE,OAAlE;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,QAAuC,eAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,OAAO,cAAP;;;AAkBA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAW,EAAX,CAA9B;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAW,EAAX,CAApC;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAW,EAAX,CAAlD;AAEA,QAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAtD;AAEA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,GAAD,CAAhD;AACA,QAAM,CAACuB,gBAAD,EAAmBC,mBAAnB,IAA0CxB,QAAQ,CAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAxD;AAEA,QAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC;AACrC2B,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,QAAQ,EAAE;AAH2B,GAAD,CAAxC;AAMA9B,EAAAA,SAAS,CAAC,MAAM;AACZ+B,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAI;AACjD,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAA0BF,QAAQ,CAACG,MAAzC;AAEAlB,MAAAA,kBAAkB,CAAC,CAACgB,QAAD,EAAWC,SAAX,CAAD,CAAlB;AACH,KAJD;AAKH,GANQ,EAML,EANK,CAAT;AAQApC,EAAAA,SAAS,CAAC,MAAK;AACXQ,IAAAA,GAAG,CAAC8B,GAAJ,CAAQ,OAAR,EAAiBC,IAAjB,CAAsBC,QAAQ,IAAG;AAC7B7B,MAAAA,QAAQ,CAAC6B,QAAQ,CAACC,IAAV,CAAR;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAzC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,KAAK,CAAC+B,GAAN,CAA4B,6DAA5B,EAA2FC,IAA3F,CAAgGC,QAAQ,IAAI;AACxG,YAAME,UAAU,GAAGF,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkBC,EAAE,IAAIA,EAAE,CAACC,KAA3B,CAAnB;AAEAhC,MAAAA,MAAM,CAAC6B,UAAD,CAAN;AACP,KAJG;AAKH,GANQ,EAMN,EANM,CAAT;AAQA1C,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIoB,UAAU,KAAK,GAAnB,EAAwB;AACpB;AACH;;AAEDb,IAAAA,KAAK,CAAC+B,GAAN,CAA+B,+DAA8DlB,UAAW,aAAxG,EAAsHmB,IAAtH,CAA2HC,QAAQ,IAAI;AACnI,YAAMM,SAAS,GAAGN,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkBI,IAAI,IAAIA,IAAI,CAACC,IAA/B,CAAlB;AAEAjC,MAAAA,SAAS,CAAC+B,SAAD,CAAT;AACN,KAJE;AAKH,GAVQ,EAUN,CAAC1B,UAAD,CAVM,CAAT;;AAYA,WAAS6B,cAAT,CAAwBC,KAAxB,EAA+D;AAC3D,UAAMN,EAAE,GAAGM,KAAK,CAACC,MAAN,CAAaC,KAAxB;AAEA/B,IAAAA,aAAa,CAACuB,EAAD,CAAb;AACH;;AAED,WAASS,gBAAT,CAA0BH,KAA1B,EAAiE;AAC7D,UAAMH,IAAI,GAAGG,KAAK,CAACC,MAAN,CAAaC,KAA1B;AAEA7B,IAAAA,eAAe,CAACwB,IAAD,CAAf;AACH;;AAED,WAASO,cAAT,CAAwBJ,KAAxB,EAAiD;AAC7CzB,IAAAA,mBAAmB,CAAC,CAChByB,KAAK,CAACK,MAAN,CAAaC,GADG,EAEhBN,KAAK,CAACK,MAAN,CAAaE,GAFG,CAAD,CAAnB;AAIH;;AAED,WAASC,iBAAT,CAA2BR,KAA3B,EAAiE;AAC7D,UAAM;AAAEtB,MAAAA,IAAF;AAAQwB,MAAAA;AAAR,QAAkBF,KAAK,CAACC,MAA9B;AAEAxB,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,OAACE,IAAD,GAAQwB;AAAtB,KAAD,CAAX;AACH;;AAED,WAASO,gBAAT,CAA0BC,EAA1B,EAAsC;AAClC,UAAMC,eAAe,GAAG7C,aAAa,CAAC8C,SAAd,CAAwBC,IAAI,IAAIA,IAAI,KAAKH,EAAzC,CAAxB;;AAEA,QAAGC,eAAe,IAAI,CAAtB,EAAyB;AACrB,YAAMG,aAAa,GAAGhD,aAAa,CAACiD,MAAd,CAAqBF,IAAI,IAAIA,IAAI,KAAKH,EAAtC,CAAtB;AACA3C,MAAAA,gBAAgB,CAAC+C,aAAD,CAAhB;AACH,KAHD,MAGO;AACH/C,MAAAA,gBAAgB,CAAC,CAAE,GAAGD,aAAL,EAAoB4C,EAApB,CAAD,CAAhB;AACH;AACJ;;AAED,WAASM,YAAT,CAAsBhB,KAAtB,EAAwC;AACpCA,IAAAA,KAAK,CAACiB,cAAN;AAEA,UAAM;AAAEvC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA4BJ,QAAlC;AACA,UAAMkB,EAAE,GAAGxB,UAAX;AACA,UAAM2B,IAAI,GAAGzB,YAAb;AACA,UAAM,CAACa,QAAD,EAAWC,SAAX,IAAwBZ,gBAA9B;AACA,UAAMd,KAAK,GAAGM,aAAd;AAEA,UAAMyB,IAAI,GAAG;AACTb,MAAAA,IADS;AAETC,MAAAA,KAFS;AAGTC,MAAAA,QAHS;AAITc,MAAAA,EAJS;AAKTG,MAAAA,IALS;AAMTZ,MAAAA,QANS;AAOTC,MAAAA,SAPS;AAQT1B,MAAAA;AARS,KAAb;AAWA0D,IAAAA,OAAO,CAACC,GAAR,CAAY5B,IAAZ;AACH;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAE6B,IAAV;AAAgB,IAAA,GAAG,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,qBAHJ,CADJ,eAUA;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,qBADD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ,CAHD,eASC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,EAAE,EAAC,MAHH;AAIA,IAAA,QAAQ,EAAER,iBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATD,eAmBA;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADL,eAEK;AACA,IAAA,IAAI,EAAC,OADL;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,EAAE,EAAC,OAHH;AAIA,IAAA,QAAQ,EAAEA,iBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFL,CADA,eAWC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,EAAE,EAAC,UAHH;AAIA,IAAA,QAAQ,EAAEA,iBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAXD,CAnBA,eAwCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,CADJ,eAMI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAExC,eAAb;AAA8B,IAAA,IAAI,EAAE,EAApC;AAAwC,IAAA,OAAO,EAAEoC,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,SAAD;AACA,IAAA,WAAW,EAAC,2EADZ;AAEA,IAAA,GAAG,EAAC,oDAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAIG,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE9B,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJH,CANJ,eAaI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAO,IAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,eAEG;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,EAAE,EAAC,IAArB;AAA0B,IAAA,KAAK,EAAEJ,UAAjC;AAA6C,IAAA,QAAQ,EAAE6B,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAECrC,GAAG,CAAC+B,GAAJ,CAAQC,EAAE,iBACP;AAAQ,IAAA,GAAG,EAAEA,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBA,EAAlB,CADH,CAFD,CAFH,CADA,eAUA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,EAAE,EAAC,MAFH;AAGA,IAAA,KAAK,EAAEtB,YAHP;AAIA,IAAA,QAAQ,EAAE+B,gBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMA;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANA,EAOCvC,MAAM,CAAC6B,GAAP,CAAWI,IAAI,iBACZ;AAAQ,IAAA,GAAG,EAAEA,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBA,IAApB,CADH,CAPD,CAFH,CAVA,CAbJ,CAxCD,eAgFC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,CADJ,eAMI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIrC,KAAK,CAACiC,GAAN,CAAUoB,IAAI,iBACf;AACA,IAAA,GAAG,EAAEA,IAAI,CAACH,EADV;AAEA,IAAA,OAAO,EAAE,MACTD,gBAAgB,CAACI,IAAI,CAACH,EAAN,CAHhB;AAIA,IAAA,SAAS,EAAE5C,aAAa,CAACuD,QAAd,CAAuBR,IAAI,CAACH,EAA5B,IAAiC,UAAjC,GAA8C,EAJzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMA;AAAK,IAAA,GAAG,EAAEG,IAAI,CAACS,SAAf;AAA0B,IAAA,GAAG,EAAET,IAAI,CAACU,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,IAAI,CAACU,KAAZ,CAPA,CADC,CADJ,CANJ,CAhFD,eAqGC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCArGD,CAVA,CADJ;AAsHH,CArOD;;AAuOA,eAAehE,WAAf","sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { Map, TileLayer, Marker } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport { LeafletMouseEvent } from 'leaflet';\r\nimport api from '../../services/api';\r\n\r\nimport './styles.css';\r\n\r\nimport logo from '../../assets/logo.svg';\r\n\r\ninterface Item {\r\n    id: number;\r\n    title: string;\r\n    image_url: string;\r\n}\r\n\r\ninterface IBGEUFResponse{\r\n    sigla: string;\r\n}\r\n\r\ninterface IBGECityResponse{\r\n    nome: string;\r\n}\r\n\r\nconst CreatePoint = () => {\r\n    const [items, setItems] = useState<Item[]>([]);\r\n    const [ufs, setUfs] = useState<string[]>([]);\r\n    const [cities, setCities] = useState<string[]>([]);\r\n    const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n\r\n    const [initialPosition, setInitialPosition] = useState<[number, number]>([0, 0]);\r\n\r\n    const [selectedUf, setSelectedUf] = useState('0');\r\n    const [selectedCity, setSelectedCity] = useState('0');\r\n    const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0, 0]);\r\n\r\n    const [FormData, setFormData] = useState({\r\n        name: '' ,\r\n        email: '' , \r\n        whatsapp: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            const { latitude, longitude } = position.coords;\r\n\r\n            setInitialPosition([latitude, longitude]);\r\n        });\r\n    },  [] );\r\n\r\n    useEffect(()=> {\r\n        api.get('items').then(response =>{\r\n            setItems(response.data);\r\n        });\r\n    }, [] );\r\n\r\n    useEffect(() => {\r\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\r\n            const ufInitials = response.data.map(uf => uf.sigla);\r\n\r\n            setUfs(ufInitials);\r\n    });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedUf === '0') {\r\n            return;\r\n        }\r\n\r\n        axios.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\r\n            const cityNames = response.data.map(city => city.nome);\r\n\r\n            setCities(cityNames);\r\n     });\r\n    }, [selectedUf]);\r\n\r\n    function handleSelectUf(event: ChangeEvent<HTMLSelectElement>) {\r\n        const uf = event.target.value;\r\n\r\n        setSelectedUf(uf);\r\n    }\r\n\r\n    function handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\r\n        const city = event.target.value;\r\n\r\n        setSelectedCity(city);\r\n    }\r\n\r\n    function handleMapClick(event:LeafletMouseEvent ){\r\n        setSelectedPosition([\r\n            event.latlng.lat,\r\n            event.latlng.lng,\r\n        ])\r\n    }\r\n\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\r\n        const { name, value } = event.target;\r\n\r\n        setFormData({...FormData, [name]: value })\r\n    }\r\n\r\n    function handleSelectItem(id: number) {\r\n        const alreadySelected = selectedItems.findIndex(item => item === id);\r\n\r\n        if(alreadySelected >= 0) {\r\n            const filteredItems = selectedItems.filter(item => item !== id);\r\n            setSelectedItems(filteredItems);\r\n        } else {\r\n            setSelectedItems([ ...selectedItems, id ])\r\n        }\r\n    }\r\n\r\n    function handleSubmit(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        const { name, email, whatsapp } = FormData;\r\n        const uf = selectedUf;\r\n        const city = selectedCity;\r\n        const [latitude, longitude] = selectedPosition;\r\n        const items = selectedItems;\r\n\r\n        const data = {\r\n            name,\r\n            email,\r\n            whatsapp,\r\n            uf,\r\n            city,\r\n            latitude,\r\n            longitude,\r\n            items\r\n        }\r\n\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-create-point\">\r\n            <header>\r\n                <img src={logo} alt=\"Ecoleta\" />\r\n\r\n                <Link to=\"/\">\r\n                    <FiArrowLeft />\r\n                    Voltar para home\r\n                </Link>\r\n            </header>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n         <h1>Cadastro do <br /> ponto de coleta</h1>\r\n\r\n         <fieldset>\r\n             <legend>\r\n                 <h2>Dados</h2>\r\n             </legend>\r\n         </fieldset>\r\n\r\n         <div className=\"field\">\r\n             <label htmlFor=\"email\">Nome da entidade</label>\r\n             <input\r\n             type=\"text\"\r\n             name=\"name\"\r\n             id=\"name\"\r\n             onChange={handleInputChange}\r\n             />\r\n         </div>\r\n\r\n        <div className=\"field-group\">\r\n        <div className=\"field\">\r\n             <label htmlFor=\"email\">Email</label>\r\n             <input\r\n             type=\"email\"\r\n             name=\"email\"\r\n             id=\"email\"\r\n             onChange={handleInputChange}\r\n             />\r\n         </div> \r\n\r\n         <div className=\"field\">\r\n             <label htmlFor=\"whatsapp\">Whatsapp</label>\r\n             <input\r\n             type=\"number\"\r\n             name=\"whatsapp\"\r\n             id=\"whatsapp\"\r\n             onChange={handleInputChange}\r\n             />\r\n         </div>\r\n       </div>\r\n         <fieldset>\r\n             <legend>\r\n                 <h2>Endereço</h2>\r\n                 <span>Selecione o endereço no mapa</span>\r\n             </legend>\r\n\r\n             <Map center={initialPosition} zoom={15} onClick={handleMapClick}>\r\n                <TileLayer\r\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n                <Marker position={selectedPosition} />\r\n            </Map>\r\n\r\n             <div className=\"field-group\">\r\n             <div className=\"field\">\r\n                <label htmlFor=\"uf\">Estado (UF)</label>\r\n                <select name=\"uf\" id=\"uf\" value={selectedUf} onChange={handleSelectUf}>\r\n                <option value=\"0\">Selecione uma UF</option>\r\n                {ufs.map(uf => (\r\n                    <option key={uf}>{uf}</option>\r\n                ))}\r\n                </select>\r\n             </div>\r\n             <div className=\"field\">\r\n                <label htmlFor=\"city\">Cidade</label>\r\n                <select \r\n                name=\"city\" \r\n                id=\"city\"\r\n                value={selectedCity}\r\n                onChange={handleSelectCity}\r\n                >\r\n                <option value=\"0\">Selecione uma cidade</option>\r\n                {cities.map(city => (\r\n                    <option key={city}>{city}</option>\r\n                ))}\r\n                </select>\r\n             </div>\r\n          </div>\r\n         </fieldset>\r\n\r\n         <fieldset>\r\n             <legend>\r\n                 <h2>Ítens de coleta</h2>\r\n                 <span>Selecione um ou mais ítens abaixo</span>\r\n             </legend>\r\n\r\n             <ul className=\"items-grid\">\r\n                {items.map(item => (\r\n                <li \r\n                key={item.id} \r\n                onClick={()=> \r\n                handleSelectItem(item.id)}\r\n                className={selectedItems.includes(item.id)? 'selected' : ''}\r\n                >\r\n                <img src={item.image_url} alt={item.title} />\r\n                <span>{item.title}</span>\r\n            </li>\r\n            ))}\r\n            </ul>\r\n         </fieldset>\r\n         \r\n         <button type=\"submit\">\r\n            Cadastrar ponto de coleta\r\n         </button>\r\n        </form>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}