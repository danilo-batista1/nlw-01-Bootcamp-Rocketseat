{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\Projeto\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport './styles.css';\nimport Dropzone from '../../components/Dropzone';\nimport * as api from '../../services/api';\nimport logo from \"../../assets/logo.svg\";\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [selectedUf, setSelectedUf] = useState('');\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [selectedFile, setSelectedFile] = useState();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const history = useHistory();\n  useEffect(() => {\n    api.db.items.index().then(res => setItems(res.data));\n    api.ibge.states().then(res => setUfs(res.data.map(uf => uf.sigla).sort()));\n    navigator.geolocation.getCurrentPosition(position => {\n      setInitialPosition([position.coords.latitude, position.coords.longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUf === '0') return;\n    api.ibge.cities(selectedUf).then(res => setCities(res.data.map(c => c.nome)));\n  }, [selectedUf]);\n\n  function toggleItem(itemId) {\n    if (selectedItems.includes(itemId)) {\n      setSelectedItems(selectedItems.filter(id => id !== itemId));\n    } else {\n      setSelectedItems([...selectedItems, itemId]);\n    }\n  }\n\n  function handleInputChange(event) {\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async function handleSubmit(event) {\n    try {\n      event.preventDefault();\n      if (!selectedFile) return;\n      const point = { ...formData,\n        uf: selectedUf,\n        city: selectedCity,\n        latitude: selectedPosition[0],\n        longitude: selectedPosition[1]\n      };\n      const items = selectedItems;\n      const res = await api.db.points.store({\n        point,\n        items\n      });\n      await api.db.points.upload(res.data.id, selectedFile);\n      alert('Ponto de coleta criado!');\n      history.push('/');\n    } catch (err) {\n      console.log(err.response.data);\n      alert('Erro ao criar ponto.');\n    }\n\n    ;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), \"Voltar para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(Dropzone, {\n    onFileUploaded: setSelectedFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Endere\\xE7os\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 15,\n    onclick: e => setSelectedPosition([e.latlng.lat, e.latlng.lng]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: e => setSelectedUf(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, \"Selecione uma UF\"), ufs.map((uf, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: e => setSelectedCity(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, \"Selecione uma cidade\"), cities.map((city, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, \"Endere\\xE7os\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    className: selectedItems.includes(item.id) ? \"selected\" : \"\",\n    onClick: () => toggleItem(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.url_image,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["C:/Users/user/Documents/Projeto/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","useHistory","FiArrowLeft","Map","TileLayer","Marker","Dropzone","api","CreatePoint","items","setItems","selectedItems","setSelectedItems","ufs","setUfs","selectedUf","setSelectedUf","cities","setCities","selectedCity","setSelectedCity","initialPosition","setInitialPosition","selectedPosition","setSelectedPosition","selectedFile","setSelectedFile","formData","setFormData","name","email","whatsapp","history","db","index","then","res","data","ibge","states","map","uf","sigla","sort","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","c","nome","toggleItem","itemId","includes","filter","id","handleInputChange","event","target","value","handleSubmit","preventDefault","point","city","points","store","upload","alert","push","err","console","log","response","logo","e","latlng","lat","lng","i","item","url_image","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { Map, TileLayer, Marker } from 'react-leaflet';\r\n\r\nimport './styles.css';\r\n\r\nimport Dropzone from '../../components/Dropzone';\r\n\r\nimport * as api from '../../services/api';\r\nimport logo from '../../assets/logo.svg';\r\nimport { Item } from '../../types/db';\r\n\r\nconst CreatePoint: React.FC = () => {\r\n  const [items, setItems] = useState<Item[]>([]);\r\n  const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n\r\n  const [ufs, setUfs] = useState<string[]>([]);\r\n  const [selectedUf, setSelectedUf] = useState('');\r\n\r\n  const [cities, setCities] = useState<string[]>([]);\r\n  const [selectedCity, setSelectedCity] = useState('');\r\n\r\n  const [initialPosition, setInitialPosition] = useState<[number, number]>([0, 0]);\r\n  const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0, 0]);\r\n\r\n  const [selectedFile, setSelectedFile] = useState<File>();\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    whatsapp: ''\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    api.db.items.index().then(res => setItems(res.data));\r\n    api.ibge.states().then(res => setUfs(res.data.map(uf => uf.sigla).sort()));\r\n\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      setInitialPosition([position.coords.latitude, position.coords.longitude]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedUf === '0') return;\r\n\r\n    api.ibge.cities(selectedUf).then(res => setCities(res.data.map(c => c.nome)));\r\n  }, [selectedUf]);\r\n\r\n  function toggleItem(itemId: number) {\r\n    if (selectedItems.includes(itemId)) {\r\n      setSelectedItems(selectedItems.filter(id => id !== itemId));\r\n    } else {\r\n      setSelectedItems([...selectedItems, itemId]);\r\n    }\r\n  }\r\n\r\n  function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  async function handleSubmit(event: FormEvent) {\r\n    try {\r\n      event.preventDefault();\r\n\r\n      if (!selectedFile) return;\r\n\r\n      const point = {\r\n        ...formData,\r\n        uf: selectedUf,\r\n        city: selectedCity,\r\n        latitude: selectedPosition[0],\r\n        longitude: selectedPosition[1]\r\n      };\r\n      const items = selectedItems;\r\n\r\n      const res = await api.db.points.store({ point, items });\r\n      await api.db.points.upload(res.data.id, selectedFile);\r\n\r\n      alert('Ponto de coleta criado!');\r\n      history.push('/');\r\n    } catch (err) {\r\n      console.log(err.response.data);\r\n      alert('Erro ao criar ponto.');\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-create-point\">\r\n      <header>\r\n        <img src={logo} alt=\"Ecoleta\" />\r\n\r\n        <Link to=\"/\">\r\n          <FiArrowLeft />\r\n          Voltar para home\r\n        </Link>\r\n      </header>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Cadastro do <br /> ponto de coleta</h1>\r\n\r\n        <Dropzone onFileUploaded={setSelectedFile} />\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Dados</h2>\r\n          </legend>\r\n\r\n          <div className=\"field\">\r\n            <label htmlFor=\"name\">Nome da entidade</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"field-group\">\r\n            <div className=\"field\">\r\n              <label htmlFor=\"email\">E-mail</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n              <label htmlFor=\"whatsapp\">Whatsapp</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"whatsapp\"\r\n                id=\"whatsapp\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Endereços</h2>\r\n            <span>Selecione o endereço no mapa</span>\r\n          </legend>\r\n\r\n          <Map\r\n            center={initialPosition}\r\n            zoom={15}\r\n            onclick={e => setSelectedPosition([e.latlng.lat, e.latlng.lng])}\r\n          >\r\n            <TileLayer\r\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n\r\n            <Marker position={selectedPosition} />\r\n          </Map>\r\n\r\n          <div className=\"field-group\">\r\n            <div className=\"field\">\r\n              <label htmlFor=\"uf\">Estado (UF)</label>\r\n              <select\r\n                name=\"uf\"\r\n                id=\"uf\"\r\n                value={selectedUf}\r\n                onChange={e => setSelectedUf(e.target.value)}\r\n              >\r\n                <option value=\"0\">Selecione uma UF</option>\r\n                {ufs.map((uf, i) => (\r\n                  <option key={i} value={uf}>{uf}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n              <label htmlFor=\"city\">Cidade</label>\r\n              <select\r\n                name=\"city\"\r\n                id=\"city\"\r\n                value={selectedCity}\r\n                onChange={e => setSelectedCity(e.target.value)}\r\n              >\r\n                <option value=\"0\">Selecione uma cidade</option>\r\n                {cities.map((city, i) => (\r\n                  <option key={i} value={city}>{city}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Endereços</h2>\r\n          </legend>\r\n\r\n          <ul className=\"items-grid\">\r\n            {items.map(item => (\r\n              <li\r\n                key={item.id}\r\n                className={selectedItems.includes(item.id) ? \"selected\" : \"\"}\r\n                onClick={() => toggleItem(item.id)}\r\n              >\r\n                <img src={item.url_image} alt={item.title} />\r\n                <span>{item.title}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </fieldset>\r\n\r\n        <button type=\"submit\">\r\n          Cadastrar ponto de coleta\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePoint;\r\n"]},"metadata":{},"sourceType":"module"}